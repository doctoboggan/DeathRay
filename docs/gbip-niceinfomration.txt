This file contains useful information about the gpib port. 

NOTE: Some commands may notwork in some devices (depend on how smart are these devices). Any way, I will see if they work or not.
NOTE: Maybe there are some grammer mistakes :)  .


**** FOR POWER SUPPLY:***

~~~~~~~~~~~~~~~~~~~~~
--Example:
#---> the defination of the commands :
== The command 
*notes
~~~~~~~~~~~~~~~~~~~~~

&&Note: (10) means E3631A DMM 
&&Note: (22) means 34401A DMM


&&Note: 
1) You can set which port are you reading from by writing the name of the port after the command. If you want to read from multiple of them, write comma between them. For ex, if I want to measure the dc voltage of all the ports  (by the way, I have not tested the example because of the server is down now):
meas:volt:dc? P6V,P25V,N25V
2) Writing the name of the port after any measurement command will give you the value in that port. 
3) I am not sure what kind of value which shows up, when you do not specific a port.
4) To see the posrts details, see the control part.

&&START:


------------------Measurement--------------------

1----> to get the value of dc voltage : 
==  meas:volt:dc?
*works on all (10,22)
2----> to get the value of ac voltage : 
==  meas:volt:ac?
*works on (22)

*****nadia>>>according to a website, the commands look the different but they are the same. 
*****NOTE: Uppercase letters indicate the short-form of the keywords - e.g. MEAS:VOLT:DC? is the short-form of the command.
*****Lowercase letters indicate the long-form of the keywords, e.g. MEASURE:VOLTAGE:DC?.  
*****Note, commands can be entered in either upper or lowercase or a mixture of the two (SCPI parsers must be case-insensitive)
*****-uppercase and lowercase are only used when documenting the commands.

3----> to get the value of dc voltage : (the result is different (I have not find why yet) //I have to find the different
== MEASure:VOLTage:DC?
*works on all (10,22)
4----> to get the value of ac voltage : (the result is different (I have not find why yet))  //I have to find the different
== MEASure:VOLTage:AC?
*works on (22)
5----> To get the value of dc current : 
== meas:curr:dc?
*works on all (10,22)
6----> To get the value of dc current : (the result is different (I have not find why yet))  //I have to find the different
== MEASure:CURRent:DC?
*works on all (10,22)
7---> To get the value of ac current : 
== meas:curr:ac?
*works on (22)
8---> To get the value of ac current : (the result is different (I have not find why yet))  //I have to find the different
== MEANsure:CURRent:AC?
*works on (22)
9---> I am not sure what does this value mean??//I have to find the meaning? nadia>>'rat' means ratio. 
== meas:volt:dc:rat?
*works on (22)
*****DC-voltage-ratio control is based on a time-domain modulation strategy that avoids the use of inappropriate
states to achieve the DC-voltage-ratio control. The proposed technique is a feedforward-modulation technique which
takes into account the actual DC voltage of each H-bridge of the converter, leading to output waveforms with low 
distortion. In this way, the dc voltage of the floating H-bridge can be controlled while the output voltage has 
low distortion independently of the desired DC voltage ratio. (whatever this means)********
	
$$Note: it is going to be continued 

-----------------Control-----------------------

$$ Note: In device, There are three ports (I think) of output. In other words, There are three situations. They are:

1) P6V
2) P25V
3) N25V

Each port (situation) has its limitation (take a look at page#72 in the manual of E3631A (the manuals are in the "manual" folder in the DeathRay folder)). To control (adjust) voltage or current, we have to set to one of the ports (situations). Then, We can set the value of voltage/current.

$$ Note: There are two ways of sending request to the device:
1) configure the ports. Then, we have to "INITiate" the configuration (see the example at Page#75 in the manual of E3631A). This way is good for timing. However, it is not helpful for our software. So, I think we will not use it at all.
2) Send the command immediately. I will use this way as command below: (see Page#80 in the manual of E3631A)

1---> To check which port is couple: 
== inst:coup? 
OR
== inst:coup:trig?    //I am not sue about their differences (I cano not test because the server is doen)


2---> To set a voltage value: //I am not sure if it is DC or AC
== 
3---> To set a current voltage: //I am not sure if it is DC or AC
== 





***Connection via TCP in python***

$$Note: The ip address is 129.59.73.80 ---- The port is 80 (it is http. I found that from my firewill mintoring screen)

~~~~~~~~~~~~~~~~~~~~~~~~~the code~~~~~~~~~~~~

 1 #!/usr/bin/env python
   2 
   3 import socket    //to call the TCP library. For that, this library has to be installed in user's computer. So, we have to add this informaion to requirment page (readme)  [NOT DONE]
   4 
   5 
   6 TCP_IP = '129.59.73.80'     //This is the ip for now
   7 TCP_PORT = 80		// The port number
   8 BUFFER_SIZE = 16384	//just a dafult 
   9 MESSAGE="meas:volt:dc?"	//here is going to be the command (this command as an example)			**
  10 
  11 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
  12 s.connect((TCP_IP, TCP_PORT))
  13 s.send(MESSAGE)
  14 data = s.recv(BUFFER_SIZE)
  15 s.close()
  16 
  17 print "the voltage is: ", data	//here to print the result of the comand				**

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

&&Note: This code require testing  [NOT DONE]
&&Note: There are some ideas, which may be useful to the code: 
	1) This code should be in separate class. So that, it will be called each time (assume each 0.5 second). Moreover, when it is called, the call will specific the coommand*.  
	2) We may not need to print the result. We only need to return the result to the caller. 
	3) We may need to check the result. In other words, some commands may not work with some devices. So, we have to make sure if the command will work or not.
	4) There is issue with code. It does not sepcific which GPIB device (we only are calling the server).



